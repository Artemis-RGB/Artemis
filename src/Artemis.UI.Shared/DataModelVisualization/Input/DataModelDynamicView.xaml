<UserControl x:Class="Artemis.UI.Shared.Input.DataModelDynamicView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:shared="clr-namespace:Artemis.UI.Shared"
             xmlns:input="clr-namespace:Artemis.UI.Shared.Input"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance input:DataModelDynamicViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Artemis.UI.Shared;component/ResourceDictionaries/DataModelConditions.xaml" />
                <ResourceDictionary>
                    <shared:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
                    <shared:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                    <DataTemplate x:Key="DataModelDataTemplate">
                        <Control x:Name="TemplateControl" Focusable="False" Template="{StaticResource DataModelSelectionTemplate}" />
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Data.ShowDataModelValues.Value, Source={StaticResource DataContextProxy}}" Value="True">
                                <Setter TargetName="TemplateControl" Property="Template" Value="{StaticResource DataModelSelectionTemplateWithValues}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Button Background="{Binding ButtonBrush}"
            BorderBrush="{Binding ButtonBrush}"
            Style="{StaticResource DataModelConditionButton}"
            ToolTip="{Binding SelectedPropertyViewModel.DisplayPropertyPath}"
            IsEnabled="{Binding IsEnabled}"
            HorizontalAlignment="Left"
            Click="PropertyButton_OnClick">
        <Button.ContextMenu>
            <ContextMenu ItemsSource="{Binding DataModelViewModel.Children}" IsOpen="{Binding IsDataModelViewModelOpen, Mode=OneWayToSource}">
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
                        <Setter Property="ItemsSource" Value="{Binding Children}" />
                        <Setter Property="Command" Value="{Binding Data.SelectPropertyCommand, Source={StaticResource DataContextProxy}}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Setter Property="CommandTarget" Value="{Binding}" />
                        <Setter Property="IsEnabled" Value="{Binding IsMatchingFilteredTypes}" />
                        <Setter Property="IsSubmenuOpen" Value="{Binding IsVisualizationExpanded, Mode=TwoWay}" />
                        <Setter Property="HeaderTemplate" Value="{StaticResource DataModelDataTemplate}" />
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
        </Button.ContextMenu>
        <Grid>
            <TextBlock Text="{Binding SelectedPropertyViewModel.PropertyDescription.Name}"
                       Visibility="{Binding SelectedPropertyViewModel, Converter={StaticResource NullToVisibilityConverter}}" />
            <TextBlock FontStyle="Italic"
                       Visibility="{Binding SelectedPropertyViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverted}">
                <Run Text="« " /><Run Text="{Binding Placeholder}" /><Run Text=" »" />
            </TextBlock>
        </Grid>
    </Button>
</UserControl>