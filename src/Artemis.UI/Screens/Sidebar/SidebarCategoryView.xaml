<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Artemis.UI.Screens.Sidebar"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:s="https://github.com/canton7/Stylet"
    x:Class="Artemis.UI.Screens.Sidebar.SidebarCategoryView"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance {x:Type local:SidebarCategoryViewModel}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ArtemisSidebar.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0 8 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ToggleButton Grid.Column="0"
                          x:Name="Expander"
                          Foreground="{DynamicResource MaterialDesignBody}"
                          Style="{StaticResource MaterialDesignExpandCollapseToggleStyle}"
                          IsChecked="{Binding ShowItems}"
                          ClickMode="Press"
                          Margin="5 0" />
            <TextBlock Grid.Column="1" 
                       Padding="0 5" 
                       FontSize="14"
                       FontWeight="SemiBold"
                       VerticalAlignment="Center" 
                       Text="{Binding ProfileCategory.Name}" 
                       Background="Transparent"
                       MouseLeftButtonUp="{s:Action OnMouseLeftButtonUp}"/>
            <Button Grid.Column="2"
                    ToolTip="Edit category"
                    Width="26"
                    Height="26"
                    Command="{s:Action UpdateCategory}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <materialDesign:PackIcon Kind="Cog" Width="16" Height="16" />
            </Button>
            <Button Grid.Column="3"
                    Margin="0 0 10 0"
                    Style="{StaticResource MaterialDesignIconForegroundButton}"
                    ToolTip="Add profile"
                    Width="26"
                    Height="26"
                    Command="{s:Action AddProfile}">
                <materialDesign:PackIcon Kind="Plus" Width="20" Height="20" />
            </Button>
        </Grid>

        <ListBox Grid.Row="1"
                 ItemsSource="{Binding Items}"
                 SelectedItem="{Binding SelectedProfileConfiguration}"
                 VerticalContentAlignment="Stretch"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource SidebarListBoxItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsProfileActive}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.Template>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <ContentControl s:View.Model="{Binding}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="View properties" Command="{s:Action ViewProfileConfigurationProperties}" CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Cog" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Duplicate" Command="{s:Action DuplicateElement}" InputGestureText="Ctrl+D" IsEnabled="False">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ContentDuplicate" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Copy" Command="{s:Action CopyElement}" InputGestureText="Ctrl+C" IsEnabled="False">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ContentCopy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Paste" Command="{s:Action PasteElement}" InputGestureText="Ctrl+V">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ContentPaste" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Rename" Command="{s:Action RenameElement}" InputGestureText="F2" IsEnabled="False">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="RenameBox" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete" Command="{s:Action DeleteElement}" InputGestureText="Del" IsEnabled="False">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="TrashCan" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
    </Grid>
</UserControl>