<UserControl x:Class="Artemis.UI.Screens.ProfileEditor.DisplayConditions.DisplayConditionGroupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Artemis.UI.Screens.ProfileEditor.DisplayConditions"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=local:DisplayConditionGroupViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Artemis.UI;component/ResourceDictionaries/DisplayConditions.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Button Grid.Row="0"
                Grid.Column="0"
                ToolTip="Delete the group and all its children"
                Style="{StaticResource MaterialDesignIconForegroundButton}"
                HorizontalAlignment="Left"
                Visibility="{Binding IsRootGroup, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}, Mode=OneWay}"
                Width="25"
                Height="25"
                Foreground="#E74C4C"
                Command="{s:Action Delete}">
            <materialDesign:PackIcon Kind="Close" Width="18" Height="18" />
        </Button>
        <Button Grid.Row="0"
                Grid.Column="1"
                ToolTip="Change the operator of the group"
                Style="{StaticResource DisplayConditionButtonLeftClickMenu}"
                Background="#E74C4C"
                BorderBrush="#E74C4C"
                Margin="3 1"
                Content="{Binding SelectedBooleanOperator}"
                Visibility="{Binding DisplayBooleanOperator, Converter={x:Static s:BoolToVisibilityConverter.Instance}, Mode=OneWay}">
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="And" Command="{s:Action SelectBooleanOperator}" CommandParameter="And" />
                    <MenuItem Header="Or" Command="{s:Action SelectBooleanOperator}" CommandParameter="Or" />
                    <MenuItem Header="And not" Command="{s:Action SelectBooleanOperator}" CommandParameter="AndNot" />
                    <MenuItem Header="Or not" Command="{s:Action SelectBooleanOperator}" CommandParameter="OrNot" />
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <Button x:Name="AddChildButton"
                Grid.Row="0"
                Grid.Column="2"
                ToolTip="Add another condition to the current group"
                HorizontalAlignment="Left"
                Foreground="#4CE758"
                Width="25"
                Height="25">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <materialDesign:PackIcon Kind="Add" Width="18" Height="18" />
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add static condition"
                              ToolTip="A condition that compares a data model property to a static input"
                              Command="{s:Action AddCondition}"
                              CommandParameter="Static">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="FormTextarea" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Add dynamic condition"
                              ToolTip="A condition that compares two data model properties"
                              Command="{s:Action AddCondition}"
                              CommandParameter="Dynamic">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="InsertLink" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Add list condition"
                              ToolTip="A condition that evaluates on items in a list"
                              Command="{s:Action AddCondition}"
                              CommandParameter="List">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="FormatListBulleted" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Add group" ToolTip="A group can contain conditions and other groups" Command="{s:Action AddGroup}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="CodeParentheses" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <ItemsControl Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" ItemsSource="{Binding Children}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <materialDesign:TransitioningContent>
                        <materialDesign:TransitioningContent.OpeningEffects>
                            <materialDesign:TransitionEffect Kind="FadeIn" />
                            <materialDesign:TransitionEffect Kind="SlideInFromLeft" />
                        </materialDesign:TransitioningContent.OpeningEffects>
                        <ContentControl s:View.Model="{Binding}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                    </materialDesign:TransitioningContent>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>