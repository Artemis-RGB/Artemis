<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Artemis.UI.Screens.Module.ProfileEditor.DisplayConditions"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:Artemis.UI.Converters"
    xmlns:utilities="clr-namespace:Artemis.UI.Utilities"
    x:Class="Artemis.UI.Screens.Module.ProfileEditor.DisplayConditions.DisplayConditionPredicateView"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type={x:Type local:DisplayConditionPredicateViewModel}}"
    x:Name="DisplayConditionPredicateRoot">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Artemis.UI;component/ResourceDictionaries/DisplayConditions.xaml" />
                <ResourceDictionary>
                    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
                    <utilities:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0 2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Button Grid.Row="0"
                Grid.Column="0"
                Style="{StaticResource MaterialDesignIconForegroundButton}"
                HorizontalAlignment="Left"
                Foreground="#E74C4C"
                Width="25"
                Height="25"
                Command="{s:Action Delete}">
            <materialDesign:PackIcon Kind="Close" Width="18" Height="18" />
        </Button>
        <Button Grid.Row="0"
                Grid.Column="1"
                Background="{DynamicResource SecondaryAccentBrush}"
                BorderBrush="{DynamicResource SecondaryAccentBrush}"
                Style="{StaticResource DisplayConditionButtonLeftClickMenu}">
            <Button.ContextMenu>
                <ContextMenu ItemsSource="{Binding DataModel.Children}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="ItemsSource" Value="{Binding Children}" />
                            <Setter Property="Header" Value="{Binding PropertyDescription.Name}" />
                            <Setter Property="ToolTip" Value="{Binding PropertyDescription.Description}" />
                            <Setter Property="Command" Value="{Binding Data.SelectPropertyCommand, Source={StaticResource DataContextProxy}}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                            <Setter Property="CommandTarget" Value="{Binding}" />
                           
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </Button.ContextMenu>
            <Grid>
                <TextBlock Text="{Binding SelectedLeftSideProperty.PropertyDescription.Name}"
                           ToolTip="{Binding SelectedLeftSideProperty.PropertyDescription.Description}"
                           Visibility="{Binding SelectedLeftSideProperty, Converter={StaticResource NullToVisibilityConverter}}" />
                <TextBlock Text="« Select a property »"
                           FontStyle="Italic"
                           Visibility="{Binding SelectedLeftSideProperty, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverted}" />
            </Grid>
        </Button>

        <Button Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource DisplayConditionButtonLeftClickMenu}"
                Background="#7B7B7B"
                BorderBrush="#7B7B7B" Content="Equals">
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Equals">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Equal" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Does not equal">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="NotEqualVariant" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Is less than">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="LessThan" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Is greater than">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="GreaterThan" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Is less than or equal to">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="LessThanOrEqual" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Is greater than or equal to">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="GreaterThanOrEqual" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Is null">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Null" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <Button Grid.Row="0"
                Grid.Column="3"
                Style="{StaticResource DisplayConditionButton}"
                Background="{DynamicResource PrimaryHueMidBrush}"
                BorderBrush="{DynamicResource PrimaryHueMidBrush}" Content="PredicateRightSide" />
    </Grid>
</UserControl>