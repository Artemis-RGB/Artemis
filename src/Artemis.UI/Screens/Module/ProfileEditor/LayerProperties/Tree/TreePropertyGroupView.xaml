<UserControl x:Class="Artemis.UI.Screens.Module.ProfileEditor.LayerProperties.Tree.TreePropertyGroupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Artemis.UI.Screens.Module.ProfileEditor.LayerProperties.Tree"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:converters="clr-namespace:Artemis.UI.Converters"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:TreePropertyGroupViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    </UserControl.Resources>
    <StackPanel>
        <!-- Type: None -->
        <TextBlock
            dd:DragDrop.DragSourceIgnore="True"
            Text="{Binding LayerPropertyGroupViewModel.PropertyGroupDescription.Name}"
            ToolTip="{Binding LayerPropertyGroupViewModel.PropertyGroupDescription.Description}"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            Margin="3 5 0 5">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayerPropertyGroupViewModel.GroupType}" Value="None">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!-- Type: General -->
        <StackPanel Orientation="Horizontal" Margin="0 5" dd:DragDrop.DragSourceIgnore="True">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayerPropertyGroupViewModel.GroupType}" Value="General">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <materialDesign:PackIcon Kind="HammerWrench" Margin="0 -1 5 0" />
            <TextBlock ToolTip="{Binding LayerPropertyGroupViewModel.PropertyGroupDescription.Description}">General</TextBlock>
        </StackPanel>

        <!-- Type: Transform -->
        <StackPanel Orientation="Horizontal" Margin="0 5" dd:DragDrop.DragSourceIgnore="True">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayerPropertyGroupViewModel.GroupType}" Value="Transform">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <materialDesign:PackIcon Kind="TransitConnectionVariant" Margin="0 -1 5 0" />
            <TextBlock ToolTip="{Binding LayerPropertyGroupViewModel.PropertyGroupDescription.Description}">Transform</TextBlock>
        </StackPanel>

        <!-- Type: LayerBrushRoot -->
        <Grid dd:DragDrop.DragSourceIgnore="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayerPropertyGroupViewModel.GroupType}" Value="LayerBrushRoot">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <materialDesign:PackIcon Grid.Column="0"
                                     Kind="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerBrush.Descriptor.Icon}"
                                     Margin="0 5 5 0" />
            <TextBlock Grid.Column="1"
                       ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerBrush.Descriptor.Description}"
                       Margin="0 5 0 0">
                Brush -&#160;
            </TextBlock>
            <TextBlock Grid.Column="2"
                       Text="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerBrush.Descriptor.DisplayName}"
                       ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerBrush.Descriptor.Description}"
                       Margin="0 5 0 0" />

            <Button Grid.Column="3"
                    Style="{StaticResource MaterialDesignIconButton}"
                    ToolTip="Open brush settings"
                    Width="24"
                    Height="24"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Command="{s:Action OpenBrushSettings}"
                    Visibility="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerBrush.HasConfigurationViewModel, Converter={x:Static s:BoolToVisibilityConverter.Instance}, Mode=OneWay}">
                <materialDesign:PackIcon Kind="Settings" Height="16" Width="16" />
            </Button>
        </Grid>

        <!-- Type: LayerEffectRoot -->
        <Grid Height="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayerPropertyGroupViewModel.GroupType}" Value="LayerEffectRoot">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <materialDesign:PackIcon
                Grid.Column="0"
                Cursor="SizeNS"
                Kind="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.Icon}"
                Margin="0 5 5 0"
                Background="Transparent" />
            <TextBlock Grid.Column="1" ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.Description}" Margin="0 5 0 0">
                Effect
            </TextBlock>
            <TextBlock Grid.Column="2"
                       ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.Description}"
                       Margin="3 5">
                -
            </TextBlock>

            <!-- Show either the descriptors display name or, if set, the effect name -->
            <TextBlock Grid.Column="3"
                       Text="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.DisplayName}"
                       ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.Description}"
                       Margin="0 5"
                       Visibility="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Name, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverted}" />
            <TextBlock Grid.Column="4"
                       Text="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Name}"
                       ToolTip="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Descriptor.Description}"
                       Margin="0 5"
                       Visibility="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Name, Converter={StaticResource NullToVisibilityConverter}}" />

            <StackPanel Grid.Column="5" Orientation="Horizontal">
                <ToggleButton
                    Style="{StaticResource MaterialDesignFlatToggleButton}"
                    ToolTip="Toggle enabled state"
                    Width="18"
                    Height="18"
                    IsChecked="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.Enabled}"
                    VerticalAlignment="Center" Padding="-25"
                    Margin="5 0"
                    Command="{s:Action EnableToggled}">
                    <materialDesign:PackIcon Kind="Eye" Height="13" Width="13" />
                </ToggleButton>
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="Rename"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Command="{s:Action RenameEffect}">
                    <materialDesign:PackIcon Kind="RenameBox" Height="16" Width="16" />
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="Open effect settings"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Command="{s:Action OpenEffectSettings}"
                        Visibility="{Binding LayerPropertyGroupViewModel.LayerPropertyGroup.LayerEffect.HasConfigurationViewModel, Converter={x:Static s:BoolToVisibilityConverter.Instance}, Mode=OneWay}">
                    <materialDesign:PackIcon Kind="Settings" Height="16" Width="16" />
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        ToolTip="Remove"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Command="{s:Action DeleteEffect}">
                    <materialDesign:PackIcon Kind="TrashCan" Height="16" Width="16" />
                </Button>
            </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>