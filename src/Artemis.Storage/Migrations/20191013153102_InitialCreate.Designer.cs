// <auto-generated />
using System;
using Artemis.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Artemis.Storage.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20191013153102_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Artemis.Storage.Entities.FolderEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FolderEntityGuid");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.HasKey("Guid");

                    b.HasIndex("FolderEntityGuid");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.KeypointEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LayerSettingEntityGuid");

                    b.Property<int>("Time");

                    b.Property<string>("Value");

                    b.HasKey("Guid");

                    b.HasIndex("LayerSettingEntityGuid");

                    b.ToTable("Keypoints");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LayerEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FolderEntityGuid");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.HasKey("Guid");

                    b.HasIndex("FolderEntityGuid");

                    b.ToTable("Layers");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LayerSettingEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LayerEntityGuid");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Guid");

                    b.HasIndex("LayerEntityGuid");

                    b.ToTable("LayerSettings");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LedEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LayerId");

                    b.Property<string>("LedName");

                    b.Property<string>("LimitedToDevice");

                    b.HasKey("Guid");

                    b.HasIndex("LayerId");

                    b.ToTable("Leds");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.PluginSettingEntity", b =>
                {
                    b.Property<string>("Name");

                    b.Property<Guid>("PluginGuid");

                    b.Property<string>("Value");

                    b.HasKey("Name", "PluginGuid");

                    b.ToTable("PluginSettings");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.ProfileEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid>("PluginGuid");

                    b.Property<string>("RootFolderGuid");

                    b.Property<int>("RootFolderId");

                    b.HasKey("Guid");

                    b.HasIndex("RootFolderGuid");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.SettingEntity", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Name");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.SurfaceEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("Guid");

                    b.ToTable("Surfaces");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.SurfacePositionEntity", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DeviceId");

                    b.Property<string>("DeviceManufacturer");

                    b.Property<string>("DeviceModel");

                    b.Property<string>("DeviceName");

                    b.Property<double>("Rotation");

                    b.Property<string>("SurfaceId");

                    b.Property<double>("X");

                    b.Property<double>("Y");

                    b.Property<int>("ZIndex");

                    b.HasKey("Guid");

                    b.HasIndex("SurfaceId");

                    b.ToTable("SurfacePositionEntity");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.FolderEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.FolderEntity")
                        .WithMany("Folders")
                        .HasForeignKey("FolderEntityGuid");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.KeypointEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.LayerSettingEntity")
                        .WithMany("Keypoints")
                        .HasForeignKey("LayerSettingEntityGuid");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LayerEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.FolderEntity")
                        .WithMany("Layers")
                        .HasForeignKey("FolderEntityGuid");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LayerSettingEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.LayerEntity")
                        .WithMany("Settings")
                        .HasForeignKey("LayerEntityGuid");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.LedEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.LayerEntity", "Layer")
                        .WithMany("Leds")
                        .HasForeignKey("LayerId");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.ProfileEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.FolderEntity", "RootFolder")
                        .WithMany()
                        .HasForeignKey("RootFolderGuid");
                });

            modelBuilder.Entity("Artemis.Storage.Entities.SurfacePositionEntity", b =>
                {
                    b.HasOne("Artemis.Storage.Entities.SurfaceEntity", "Surface")
                        .WithMany("SurfacePositions")
                        .HasForeignKey("SurfaceId");
                });
#pragma warning restore 612, 618
        }
    }
}
